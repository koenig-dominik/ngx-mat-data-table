!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("tslib"),require("@angular/core"),require("@angular/material"),require("@angular/cdk/collections"),require("rxjs"),require("rxjs/operators"),require("@angular/common"),require("@angular/forms")):"function"==typeof define&&define.amd?define("ngx-mat-data-table",["exports","tslib","@angular/core","@angular/material","@angular/cdk/collections","rxjs","rxjs/operators","@angular/common","@angular/forms"],t):t(e["ngx-mat-data-table"]={},e.tslib,e.ng.core,e.ng.material,e.ng.cdk.collections,null,e.Rx.Observable.prototype,e.ng.common,e.ng.forms)}(this,function(e,c,t,n,a,u,r,i,o){"use strict";var s=function(){function e(e){this.snackBar=e,this.pageSizeOptions=[5,10,15],this.pageSize=5,this.displayedColumns=["select"],this.selection=new a.SelectionModel(!0,[]),this.filterChanged=new t.EventEmitter,this.cellChanged=new t.EventEmitter}return e.prototype.ngOnInit=function(){var e,t,s=this;try{for(var n=c.__values(this.columns),a=n.next();!a.done;a=n.next()){var i=a.value;this.displayedColumns.push(i.name)}}catch(o){e={error:o}}finally{try{a&&!a.done&&(t=n["return"])&&t.call(n)}finally{if(e)throw e.error}}this.dataSource.setup(this.paginator,this.sort,this.filterChanged,this.cellChanged),u.merge(this.sort.sortChange,this.filterChanged).subscribe(function(){return s.paginator.pageIndex=0}),this.dataSource.saveError.pipe(r.skip(1)).subscribe(function(e){s.snackBar.open(e,null,{duration:2e3,horizontalPosition:"right",verticalPosition:"bottom"})}),this.renderedRowsSubscription=this.dataSource.renderedRowsObservable.subscribe(function(e){try{for(var t=c.__values(s.selection.selected),n=t.next();!n.done;n=t.next()){var a=n.value;-1===e.indexOf(a)&&s.selection.deselect(a)}}catch(r){i={error:r}}finally{try{n&&!n.done&&(o=t["return"])&&o.call(t)}finally{if(i)throw i.error}}var i,o})},e.prototype.ngOnDestroy=function(){this.renderedRowsSubscription.unsubscribe()},e.prototype.cellChange=function(e,t,n,a){t[e]=n,this.cellChanged.emit({column:e,values:t,rowIndex:a})},e.prototype.filterChange=function(e){this.filter=e.trim().toLowerCase(),this.filterChanged.emit(this.filter)},e.prototype.masterToggle=function(){var e;this.isAllSelected()?this.selection.clear():(e=this.selection).select.apply(e,c.__spread(this.dataSource.renderedRows))},e.prototype.isAllSelected=function(){return this.selection.selected.length===this.dataSource.renderedRows.length},e.decorators=[{type:t.Component,args:[{selector:"ngx-mat-data-table",template:'<div class="mat-typography mat-elevation-z2">\n  <div class="header">\n    <h2>{{title}}</h2>\n    <div class="actions">\n\n      <button *ngFor="let button of buttons"\n              mat-icon-button\n              (click)="button.action(selection.selected)"\n              [disabled]="button.selectionRequired && selection.selected.length === 0 || button.selectionRequired && !button.multiSelection && selection.selected.length > 1">\n        <mat-icon>{{button.icon}}</mat-icon>\n      </button>\n      <mat-form-field class="search-field">\n        <input [ngModel]="filter" (ngModelChange)="filterChange($event)" matInput placeholder="Filter">\n      </mat-form-field>\n    </div>\n  </div>\n\n  <mat-progress-bar [class.show]="(dataSource.loading | async) || (dataSource.buffering | async)" [mode]="(dataSource.buffering | async) ? \'buffer\' : \'indeterminate\'"></mat-progress-bar>\n  <mat-table #table [dataSource]="dataSource"\n             matSort [matSortActive]="sortColumn" matSortDisableClear matSortDirection="asc">\n\n    \x3c!-- Checkbox Column --\x3e\n    <ng-container matColumnDef="select">\n      <mat-header-cell *matHeaderCellDef>\n        <mat-checkbox color="primary" (change)="$event ? masterToggle() : null"\n                      [checked]="selection.hasValue() && isAllSelected()"\n                      [indeterminate]="selection.hasValue() && !isAllSelected()">\n        </mat-checkbox>\n      </mat-header-cell>\n      <mat-cell *matCellDef="let row">\n        <mat-checkbox color="primary" (click)="$event.stopPropagation()"\n                      (change)="$event ? selection.toggle(row) : null"\n                      [checked]="selection.isSelected(row)">\n        </mat-checkbox>\n      </mat-cell>\n    </ng-container>\n\n    <ng-container *ngFor="let column of columns" [matColumnDef]="column.name">\n      <mat-header-cell mat-sort-header *matHeaderCellDef [style.max-width]="(column.width + 24) + \'px\'">{{column.label}}</mat-header-cell>\n      <mat-cell *matCellDef="let row; let rowIndex = index" [style.max-width]="(column.width + 24) + \'px\'">\n        <ng-container *ngIf="!column.editable; else editable">\n\n          <ng-container *ngIf="row[column.name].constructor.name !== \'Date\'; else date">\n            {{row[column.name]}}\n          </ng-container>\n\n          <ng-template #date>\n            {{row[column.name] | date:\'short\'}}\n          </ng-template>\n\n        </ng-container>\n        <ng-template #editable>\n\n          <mat-progress-bar [class.show]="dataSource.renderedSavingRows[rowIndex].get(column.name) | async" mode="indeterminate"></mat-progress-bar>\n\n          <ng-container *ngIf="column.values; else elseIf">\n            <mat-form-field [style.max-width]="column.width + \'px\'">\n              <mat-select [ngModel]="row[column.name]" (ngModelChange)="cellChange(column.name, row, $event, rowIndex)">\n                <mat-option *ngFor="let value of column.values" [value]="value">\n                  {{ value }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </ng-container>\n\n          <ng-template #elseIf>\n            <ng-container *ngIf="row[column.name].constructor.name !== \'Date\'; else datepicker">\n              <div class="edit-button" [matMenuTriggerFor]="menu">\n                {{row[column.name]}}\n                <mat-icon>edit_mode</mat-icon>\n              </div>\n              <mat-menu #menu="matMenu">\n                <div mat-menu-item disabled class="full-height-menu-item">\n                  <mat-form-field class="mat-cell" [style.max-width]="column.width + \'px\'"> \x3c!-- mat-cell is a hack to override the disabled state of mat-menu-item --\x3e\n                    <input matInput #message [attr.maxlength]="column.maxLength" [ngModel]="row[column.name]" (ngModelChange)="cellChange(column.name, row, $event, rowIndex)">\n                    <mat-hint align="end">{{message.value.length}} / {{column.maxLength}}</mat-hint>\n                  </mat-form-field>\n                </div>\n              </mat-menu>\n            </ng-container>\n\n            <ng-template #datepicker>\n              <mat-form-field [style.max-width]="column.width + \'px\'">\n                <input matInput [matDatepicker]="picker" [ngModel]="row[column.name]" (ngModelChange)="cellChange(column.name, row, $event, rowIndex)">\n                <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-form-field>\n            </ng-template>\n          </ng-template>\n\n        </ng-template>\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef="displayedColumns"></mat-header-row>\n    <mat-row *matRowDef="let row; columns: displayedColumns;"></mat-row>\n  </mat-table>\n  <mat-paginator [pageSize]="pageSize"\n                 [pageSizeOptions]="pageSizeOptions"\n                 [showFirstLastButtons]="true">\n  </mat-paginator>\n</div>\n',styles:[":host{display:block}:host ::ng-deep .mat-cell .mat-form-field-underline{visibility:hidden}:host .header{padding-top:24px;padding-left:24px;padding-right:24px}:host .header h2{display:inline}:host .header .actions{display:inline-block;float:right}:host .header .actions .search-field,:host .header .actions button{margin-left:10px}:host .mat-progress-bar{opacity:0}:host .mat-progress-bar.show{opacity:1}:host .mat-column-select{max-width:44px;overflow:visible}:host .mat-cell{flex-direction:column;align-items:flex-start;justify-content:center}:host .mat-cell .edit-button{cursor:pointer;line-height:24px;width:100%;box-sizing:border-box;padding-right:24px;padding-top:1.16em;padding-bottom:1.18em}:host .mat-cell .edit-button .mat-icon{float:right;margin-left:5px}.full-height-menu-item{height:auto;line-height:initial}"]}]}],e.ctorParameters=function(){return[{type:n.MatSnackBar}]},e.propDecorators={title:[{type:t.Input}],columns:[{type:t.Input}],sortColumn:[{type:t.Input}],pageSizeOptions:[{type:t.Input}],pageSize:[{type:t.Input}],buttons:[{type:t.Input}],dataSource:[{type:t.Input}],paginator:[{type:t.ViewChild,args:[n.MatPaginator]}],sort:[{type:t.ViewChild,args:[n.MatSort]}]},e}(),l=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[]}},e.decorators=[{type:t.NgModule,args:[{imports:[i.CommonModule,n.MatTableModule,n.MatFormFieldModule,n.MatInputModule,n.MatCheckboxModule,n.MatNativeDateModule,n.MatDatepickerModule,n.MatSelectModule,n.MatIconModule,n.MatMenuModule,n.MatPaginatorModule,n.MatSortModule,n.MatProgressBarModule,n.MatSnackBarModule,n.MatButtonModule,o.FormsModule],declarations:[s],exports:[s],providers:[]}]}],e}(),d=function(){function e(e,t,n,a){void 0===a&&(a=300),this.uniqueKey=e,this.fetchData=t,this.changeData=n,this.debounce=a,this.filter="",this.renderedRowsSubject=new u.BehaviorSubject([]),this.loadingSubject=new u.BehaviorSubject(!1),this.bufferingSubject=new u.BehaviorSubject(!1),this.saveErrorSubject=new u.BehaviorSubject(""),this.rows=new Map,this.rowsViews=new Map,this.savingRows=new Map,this.savingRowsViews=new Map,this.loading=this.loadingSubject.asObservable(),this.buffering=this.bufferingSubject.asObservable(),this.saveError=this.saveErrorSubject.asObservable(),this.renderedRowsObservable=this.renderedRowsSubject.asObservable()}return Object.defineProperty(e.prototype,"renderedRows",{get:function(){return this.renderedRowsSubject.value},enumerable:!0,configurable:!0}),e.prototype.connect=function(e){return this.renderedRowsSubject.asObservable()},e.prototype.disconnect=function(e){this.renderedRowsSubject.complete(),this.loadingSubject.complete(),this.bufferingSubject.complete(),this.saveErrorSubject.complete()},e.prototype.setup=function(e,t,n,a){var i=this;this.paginator=e,this.sort=t,u.merge(n,this.sort.sortChange,this.paginator.page).pipe(r.tap(function(e){"string"==typeof e&&(i.filter=e),i.bufferingSubject.next(!0)}),r.debounceTime(this.debounce),r.tap(function(){i.bufferingSubject.next(!1)}),r.distinctUntilChanged(function(e,t){return e.pageIndex!==undefined?e.pageIndex===t.pageIndex&&e.pageSize===t.pageSize:e.direction!==undefined?e.active===t.active&&e.direction===t.direction:e===t})).subscribe(function(){i.updateCurrentView()}),Promise.resolve().then(function(){i.updateCurrentView()}),a.pipe(r.debounceTime(this.debounce)).subscribe(function(a){return c.__awaiter(i,void 0,void 0,function(){var t,n;return c.__generator(this,function(e){switch(e.label){case 0:(t=this.renderedSavingRows[a.rowIndex]).get(a.column).next(!0),e.label=1;case 1:return e.trys.push([1,3,4,5]),[4,this.changeData(a.column,a.values)];case 2:return e.sent(),[3,5];case 3:return n=e.sent(),this.saveErrorSubject.next(n),[3,5];case 4:return t.get(a.column).next(!1),[7];case 5:return[2]}})})})},e.prototype.updateCurrentView=function(){return c.__awaiter(this,void 0,void 0,function(){var t,n,a,i,o,r,s,l;return c.__generator(this,function(e){switch(e.label){case 0:return this.currentOffset=this.paginator.pageIndex*this.paginator.pageSize,this.loadingSubject.next(!0),[4,this.fetchData(this.filter,this.sort.active,this.sort.direction,this.currentOffset,this.paginator.pageSize)];case 1:for(t=e.sent(),this.paginator.length=t.count,n=this.filter+";"+this.sort.active+";"+this.sort.direction,!1===this.rowsViews.has(n)&&(this.rowsViews.set(n,[]),this.savingRowsViews.set(n,[])),this.currentView=this.rowsViews.get(n),this.currentSavingRowsView=this.savingRowsViews.get(n),a=0,i=t.items.length;a<i;a++){if(o=t.items[a],r=o[this.uniqueKey],this.rows.has(r))for(l in o)o.hasOwnProperty(l)&&(this.rows.get(r)[l]=o[l]);else this.rows.set(r,o);if(!this.savingRows.has(r)){for(l in s=new Map,o)o.hasOwnProperty(l)&&s.set(l,new u.BehaviorSubject(!1));this.savingRows.set(r,s)}this.currentView[this.currentOffset+a]=this.rows.get(r),this.currentSavingRowsView[this.currentOffset+a]=this.savingRows.get(r)}return this.updateRenderedRows(),this.loadingSubject.next(!1),[2]}})})},e.prototype.updateRenderedRows=function(){this.renderedSavingRows=this.currentSavingRowsView.slice(this.currentOffset,this.currentOffset+this.paginator.pageSize),this.renderedRowsSubject.next(this.currentView.slice(this.currentOffset,this.currentOffset+this.paginator.pageSize))},e}();e.DataTableModule=l,e.AsyncDataSource=d,e.ɵa=s,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-mat-data-table.umd.min.js.map