{"__symbolic":"module","version":4,"metadata":{"DataTableModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":12,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":14,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatTableModule","line":15,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatFormFieldModule","line":16,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatInputModule","line":17,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatCheckboxModule","line":18,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatNativeDateModule","line":19,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatDatepickerModule","line":20,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatSelectModule","line":21,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatIconModule","line":22,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatMenuModule","line":23,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatPaginatorModule","line":24,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatSortModule","line":25,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatProgressBarModule","line":26,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBarModule","line":27,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatButtonModule","line":28,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":29,"character":4}],"declarations":[{"__symbolic":"reference","name":"ɵa"}],"exports":[{"__symbolic":"reference","name":"ɵa"}],"providers":[]}]}],"members":{},"statics":{"forRoot":{"__symbolic":"function","parameters":[],"value":{"ngModule":{"__symbolic":"reference","name":"DataTableModule"},"providers":[]}}}},"FetchFunction":{"__symbolic":"interface"},"ChangeFunction":{"__symbolic":"interface"},"AsyncDataSource":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[null,{"__symbolic":"error","message":"Could not resolve type","line":52,"character":52,"context":{"typeName":"FetchFunction"},"module":"./async-data-source"},{"__symbolic":"error","message":"Could not resolve type","line":52,"character":90,"context":{"typeName":"ChangeFunction"},"module":"./async-data-source"},null]}],"connect":[{"__symbolic":"method"}],"disconnect":[{"__symbolic":"method"}],"setup":[{"__symbolic":"method"}],"updateCurrentView":[{"__symbolic":"method"}],"updateRenderedRows":[{"__symbolic":"method"}]}},"ɵa":{"__symbolic":"class","arity":1,"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"ngx-mat-data-table","template":"<div class=\"mat-typography mat-elevation-z2\">\n  <div class=\"header\">\n    <h2>{{title}}</h2>\n    <div class=\"actions\">\n\n      <button *ngFor=\"let button of buttons\"\n              mat-icon-button\n              (click)=\"button.action(selection.selected)\"\n              [disabled]=\"button.selectionRequired && selection.selected.length === 0 || button.selectionRequired && !button.multiSelection && selection.selected.length > 1\">\n        <mat-icon>{{button.icon}}</mat-icon>\n      </button>\n      <mat-form-field class=\"search-field\">\n        <input [ngModel]=\"filter\" (ngModelChange)=\"filterChange($event)\" matInput placeholder=\"Filter\">\n      </mat-form-field>\n    </div>\n  </div>\n\n  <mat-progress-bar [class.show]=\"(dataSource.loading | async) || (dataSource.buffering | async)\" [mode]=\"(dataSource.buffering | async) ? 'buffer' : 'indeterminate'\"></mat-progress-bar>\n  <mat-table #table [dataSource]=\"dataSource\"\n             matSort [matSortActive]=\"sortColumn\" matSortDisableClear matSortDirection=\"asc\">\n\n    <!-- Checkbox Column -->\n    <ng-container matColumnDef=\"select\">\n      <mat-header-cell *matHeaderCellDef>\n        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n        </mat-checkbox>\n      </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\">\n        </mat-checkbox>\n      </mat-cell>\n    </ng-container>\n\n    <ng-container *ngFor=\"let column of columns\" [matColumnDef]=\"column.name\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef [style.max-width]=\"(column.width + 24) + 'px'\">{{column.label}}</mat-header-cell>\n      <mat-cell *matCellDef=\"let row; let rowIndex = index\" [style.max-width]=\"(column.width + 24) + 'px'\">\n        <ng-container *ngIf=\"!column.editable; else editable\">\n\n          <ng-container *ngIf=\"row[column.name].constructor.name !== 'Date'; else date\">\n            {{row[column.name]}}\n          </ng-container>\n\n          <ng-template #date>\n            {{row[column.name] | date:'short'}}\n          </ng-template>\n\n        </ng-container>\n        <ng-template #editable>\n\n          <mat-progress-bar [class.show]=\"dataSource.renderedSavingRows[rowIndex].get(column.name) | async\" mode=\"indeterminate\"></mat-progress-bar>\n\n          <ng-container *ngIf=\"column.values; else elseIf\">\n            <mat-form-field [style.max-width]=\"column.width + 'px'\">\n              <mat-select [ngModel]=\"row[column.name]\" (ngModelChange)=\"cellChange(column.name, row, $event, rowIndex)\">\n                <mat-option *ngFor=\"let value of column.values\" [value]=\"value\">\n                  {{ value }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </ng-container>\n\n          <ng-template #elseIf>\n            <ng-container *ngIf=\"row[column.name].constructor.name !== 'Date'; else datepicker\">\n              <div class=\"edit-button\" [matMenuTriggerFor]=\"menu\">\n                {{row[column.name]}}\n                <mat-icon>edit_mode</mat-icon>\n              </div>\n              <mat-menu #menu=\"matMenu\">\n                <div mat-menu-item disabled class=\"full-height-menu-item\">\n                  <mat-form-field class=\"mat-cell\" [style.max-width]=\"column.width + 'px'\"> <!-- mat-cell is a hack to override the disabled state of mat-menu-item -->\n                    <input matInput #message [attr.maxlength]=\"column.maxLength\" [ngModel]=\"row[column.name]\" (ngModelChange)=\"cellChange(column.name, row, $event, rowIndex)\">\n                    <mat-hint align=\"end\">{{message.value.length}} / {{column.maxLength}}</mat-hint>\n                  </mat-form-field>\n                </div>\n              </mat-menu>\n            </ng-container>\n\n            <ng-template #datepicker>\n              <mat-form-field [style.max-width]=\"column.width + 'px'\">\n                <input matInput [matDatepicker]=\"picker\" [ngModel]=\"row[column.name]\" (ngModelChange)=\"cellChange(column.name, row, $event, rowIndex)\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-form-field>\n            </ng-template>\n          </ng-template>\n\n        </ng-template>\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n  <mat-paginator [pageSize]=\"pageSize\"\n                 [pageSizeOptions]=\"pageSizeOptions\"\n                 [showFirstLastButtons]=\"true\">\n  </mat-paginator>\n</div>\n","styles":[":host{display:block}:host ::ng-deep .mat-cell .mat-form-field-underline{visibility:hidden}:host .header{padding-top:24px;padding-left:24px;padding-right:24px}:host .header h2{display:inline}:host .header .actions{display:inline-block;float:right}:host .header .actions .search-field,:host .header .actions button{margin-left:10px}:host .mat-progress-bar{opacity:0}:host .mat-progress-bar.show{opacity:1}:host .mat-column-select{max-width:44px;overflow:visible}:host .mat-cell{flex-direction:column;align-items:flex-start;justify-content:center}:host .mat-cell .edit-button{cursor:pointer;line-height:24px;width:100%;box-sizing:border-box;padding-right:24px;padding-top:1.16em;padding-bottom:1.18em}:host .mat-cell .edit-button .mat-icon{float:right;margin-left:5px}.full-height-menu-item{height:auto;line-height:initial}"]}]}],"members":{"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":118,"character":3}}]}],"columns":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":119,"character":3}}]}],"sortColumn":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":120,"character":3}}]}],"pageSizeOptions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":121,"character":3}}]}],"pageSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":122,"character":3}}]}],"buttons":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":123,"character":3}}]}],"dataSource":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":125,"character":3}}]}],"paginator":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":127,"character":3},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MatPaginator","line":127,"character":13}]}]}],"sort":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":128,"character":3},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MatSort","line":128,"character":13}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBar","line":140,"character":32}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"cellChange":[{"__symbolic":"method"}],"filterChange":[{"__symbolic":"method"}],"masterToggle":[{"__symbolic":"method"}],"isAllSelected":[{"__symbolic":"method"}]}}},"origins":{"DataTableModule":"./data-table.module","FetchFunction":"./async-data-source","ChangeFunction":"./async-data-source","AsyncDataSource":"./async-data-source","ɵa":"./components/data-table/data-table.component"},"importAs":"ngx-mat-data-table"}